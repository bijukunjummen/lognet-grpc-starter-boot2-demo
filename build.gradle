
buildscript {
    ext {
        springBoot_Version = "2.0.0.RELEASE"
        grpcVersion = '1.11.0'
        springCloudVersion = 'Finchley.RC1'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }        
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBoot_Version}")
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.5'
    }
}

apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

dependencies {

    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile 'org.springframework.boot:spring-boot-starter-web'

    compileOnly('org.projectlombok:lombok:1.16.20')
    testCompileOnly('org.projectlombok:lombok:1.16.20')

    compile('org.lognet:grpc-spring-boot-starter:2.3.2')

    compile("org.springframework.cloud:spring-cloud-starter-sleuth")
    compile("org.springframework.cloud:spring-cloud-starter-zipkin")
    compile("org.springframework.amqp:spring-rabbit")
    compile("io.zipkin.brave:brave-instrumentation-grpc:4.19.0")


    testCompile 'org.springframework.boot:spring-boot-starter-aop'
    testCompile('org.springframework.boot:spring-boot-starter-test')
}
sourceSets {
    main {
        java {
            srcDir 'src/main/protoGen'
        }
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.5.1'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }

    generateProtoTasks {
        ofSourceSet('main').each { task ->
            task.builtins {
                java{
                    outputSubDir = 'protoGen'
                }
            }
            task.plugins {
                grpc {
                    outputSubDir = 'protoGen'
                }
            }
        }
    }
    generatedFilesBaseDir = "$projectDir/src/"
}

task cleanProtoGen{
    doFirst{
           delete("$projectDir/src/main/protoGen")
    }
}
clean.dependsOn cleanProtoGen

dependencyManagement {
    imports {
//        mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBoot_Version}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}
